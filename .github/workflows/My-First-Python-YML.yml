name: CI/CD Pipeline For Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          debug: true
          script: |
            REPO_PATH=/var/www/helloapp/python-github-actions-demo
            VENV_PATH=/home/ec2-user/myvenv
            SERVICE_NAME=helloapp.service
            NGINX_CONF=/etc/nginx/conf.d/helloapp.conf

            # Install NGINX if missing
            if ! command -v nginx > /dev/null; then
              sudo dnf install -y nginx
              sudo systemctl enable nginx
              sudo systemctl start nginx
            fi

            # Configure NGINX reverse proxy
            echo "server {
                listen 80;
                server_name _;
                location / {
                    proxy_pass http://127.0.0.1:8000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }" | sudo tee $NGINX_CONF

            sudo nginx -t
            sudo systemctl reload nginx

            # Clone or pull repo
            if [ ! -d $REPO_PATH ]; then
              sudo mkdir -p /var/www/helloapp
              sudo chown ec2-user:ec2-user /var/www/helloapp
              git clone https://github.com/ABYUF/python-github-actions-demo.git $REPO_PATH
            fi
            cd $REPO_PATH
            git pull origin main

            # Create virtual environment if missing
            if [ ! -d $VENV_PATH ]; then
              python3 -m venv $VENV_PATH
            fi

            source $VENV_PATH/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

            # Create systemd service if missing
            if [ ! -f /etc/systemd/system/$SERVICE_NAME ]; then
              sudo tee /etc/systemd/system/$SERVICE_NAME > /dev/null << 'EOF'
[Unit]
Description=Gunicorn instance to serve helloapp
After=network.target

[Service]
User=ec2-user
Group=ec2-user
WorkingDirectory=/var/www/helloapp/python-github-actions-demo
Environment="PATH=/home/ec2-user/myvenv/bin"
ExecStart=/home/ec2-user/myvenv/bin/gunicorn -w 4 -b 127.0.0.1:8000 src.app:app

[Install]
WantedBy=multi-user.target
EOF
              sudo systemctl daemon-reload
              sudo systemctl enable $SERVICE_NAME
            fi

            # Restart service
            sudo systemctl restart $SERVICE_NAME
            echo "===== Last 20 lines of $SERVICE_NAME logs ====="
            sudo journalctl -u $SERVICE_NAME -n 20 --no-pager
