name: CI/CD Pipeline For Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      env:
        PYTHONPATH: ${{ github.workspace }}/src
      run: pytest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        debug: true
        script: |
          cd /home/ec2-user/python-github-actions-demo || git clone https://github.com/ABYUF/python-github-actions-demo.git /home/ec2-user/python-github-actions-demo
          cd /home/ec2-user/python-github-actions-demo
          git pull origin main
          
          # Create virtual environment if it doesn't exist
          if [ ! -d ~/myvenv ]; then
            python3 -m venv ~/myvenv
          fi
          
          source ~/myvenv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          
          # Restart Gunicorn
          pkill gunicorn || true
          nohup gunicorn -w 4 -b 0.0.0.0:8000 src.app:app > app.log 2>&1 &
          
          # Show last 20 lines of app.log for debugging
          echo "===== Last 20 lines of app.log ====="
          tail -n 20 app.log
